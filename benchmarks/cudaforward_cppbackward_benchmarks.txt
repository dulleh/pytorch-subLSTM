(base) bash-4.2$ python -m cProfile -s tottime run.py --timing --model=subLSTM --cuda --batch-size=8 --seq-length=10 --nhid=500 --epochs=5 --training-size=400 > tempfile && head -n 30 tempfile
../torch/csrc/utils/python_arg_parser.cpp:698: UserWarning: This overload of addcmul_ is deprecated:
	addcmul_(Number value, Tensor tensor1, Tensor tensor2)
Consider using one of the following signatures instead:
	addcmul_(Tensor tensor1, Tensor tensor2, Number value)
cuda is available: True
cudnn enabled: True
total time to train 4.797770023345947
         500107 function calls (479607 primitive calls) in 6.364 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      200    3.055    0.015    3.106    0.016 clip_grad.py:6(clip_grad_norm_)
       17    0.671    0.039    0.671    0.039 {method 'to' of 'torch._C._TensorBase' objects}
      200    0.509    0.003    0.509    0.003 {method 'run_backward' of 'torch._C._EngineBase' objects}
      200    0.470    0.002    0.470    0.002 {method 'item' of 'torch._C._TensorBase' objects}
        1    0.192    0.192    5.710    5.710 run.py:63(main)
     2266    0.158    0.000    0.158    0.000 {built-in method addmm}
      489    0.151    0.000    0.156    0.000 <frozen importlib._bootstrap_external>:914(get_data)
    44/42    0.146    0.003    0.147    0.004 {built-in method _imp.create_dynamic}
     2060    0.136    0.000    0.434    0.000 functional.py:4(sublstm)
     4120    0.050    0.000    0.050    0.000 {built-in method sigmoid}
      143    0.044    0.000    0.044    0.000 {built-in method posix.listdir}
      489    0.036    0.000    0.036    0.000 {built-in method marshal.loads}
     2060    0.032    0.000    0.032    0.000 {method 'matmul' of 'torch._C._TensorBase' objects}
      206    0.029    0.000    0.085    0.000 run.py:37(next_batch)
      412    0.025    0.000    0.025    0.000 {built-in method as_tensor}
       54    0.024    0.000    0.024    0.000 {built-in method io.open}
     2000    0.024    0.000    0.024    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
     2090    0.024    0.000    0.024    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
      406    0.021    0.000    0.021    0.000 {built-in method stack}
     4326    0.019    0.000    0.019    0.000 {method 't' of 'torch._C._TensorBase' objects}
 7004/412    0.019    0.000    0.513    0.001 module.py:540(__call__)
     1200    0.018    0.000    0.018    0.000 {built-in method norm}






























 (base) bash-4.2$ python -m cProfile -s tottime run.py --timing --model=subLSTMCuda --cuda --batch-size=8 --seq-length=10 --nhid=500 --epochs=5 --training-size=400 > tempfile && head -n 30 tempfile
../torch/csrc/utils/python_arg_parser.cpp:698: UserWarning: This overload of addcmul_ is deprecated:
	addcmul_(Number value, Tensor tensor1, Tensor tensor2)
Consider using one of the following signatures instead:
	addcmul_(Tensor tensor1, Tensor tensor2, Number value)
cuda is available: True
cudnn enabled: True
total time to train 7.559266567230225
         866284 function calls (851537 primitive calls) in 9.339 seconds

   Ordered by: internal time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
      200    3.218    0.016    3.218    0.016 {method 'run_backward' of 'torch._C._EngineBase' objects}
     6238    1.626    0.000    1.652    0.000 {built-in method io.open}
     2060    0.679    0.000    0.679    0.000 {built-in method forward.forward}
       16    0.667    0.042    0.668    0.042 {method 'to' of 'torch._C._TensorBase' objects}
      200    0.410    0.002    0.410    0.002 {method 'item' of 'torch._C._TensorBase' objects}
      200    0.385    0.002    0.465    0.002 clip_grad.py:6(clip_grad_norm_)
      489    0.252    0.001    0.257    0.001 <frozen importlib._bootstrap_external>:914(get_data)
    14838    0.216    0.000    0.216    0.000 {built-in method posix.stat}
2104/2102    0.167    0.000    0.169    0.000 {built-in method _imp.create_dynamic}
        1    0.138    0.138    8.424    8.424 run.py:63(main)
     4127    0.055    0.000    0.086    0.000 {method 'read' of '_io.TextIOWrapper' objects}
    20922    0.050    0.000    0.077    0.000 posixpath.py:75(join)
     2060    0.047    0.000    1.750    0.001 _cpp_extension_versioner.py:14(hash_source_files)
     2060    0.045    0.000    3.041    0.001 {built-in method apply}
      206    0.045    0.000    0.130    0.001 run.py:37(next_batch)
      143    0.043    0.000    0.043    0.000 {built-in method posix.listdir}
      489    0.037    0.000    0.037    0.000 {built-in method marshal.loads}
      412    0.035    0.000    0.035    0.000 {built-in method as_tensor}
      406    0.033    0.000    0.033    0.000 {built-in method stack}
     1600    0.032    0.000    0.032    0.000 {method 'add_' of 'torch._C._TensorBase' objects}
     1672    0.029    0.000    0.029    0.000 {method 'mul_' of 'torch._C._TensorBase' objects}
     2060    0.028    0.000    0.180    0.000 imp.py:254(find_module)
